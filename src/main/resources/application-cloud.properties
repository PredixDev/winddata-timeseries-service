#properties when in cloud foundry profile
logging.level.root=${logging_level_root}
logging.level.org.springframework=${logging_level_org_springframework}
logging.level.com.ge.predix.solsvc=${logging_level_com_ge_predix_solsvc}

#these variables, with the underscores, you need to define in the manifest as env vars.  - do not delete these placeholders
predix.oauth.issuerId.url=#willGetFromVCAP
predix.oauth.uri=#willGetFromVCAP
predix.oauth.clientId=${predix_oauthClientId}

#these will be automatically retrieved from VCAP variables in the cloud - do not delete
predix.timeseries.queryUrl=#willGetFromVCAP
predix.timeseries.zoneid=#willGetFromVCAPInstanceId
predix.timeseries.websocket.uri=#willGetFromVCAP
predix.timeseries.websocket.pool.maxIdle=${predix_timeseries_wspool_maxIdle}
predix.timeseries.websocket.pool.maxActive=${predix_timeseries_wspool_maxActive}

#timeseries2 if needed
#Two choices below for 2nd time series setup.  You can:
#Option 1. uncomment these and manually set the underscore version of the props in the manifest.  Be sure to build the code if you change this file.
#predix.timeseries2.oauth.clientId=${predix_timeseries2_oauth_clientId}
#predix.timeseries2.oauth.issuerId.url=${predix_timeseries2_oauth_issuerId_url}
#predix.timeseries2.queryUrl=${predix_timeseries2_queryUrl}
#predix.timeseries2.zoneid=${predix_timeseries2_zoneid}
#predix.timeseries2.websocket.uri=${predix_timeseries2_websocket_uri} 
#Option 2. use vcap binding - you may need to use CUPS if time series is in another space.
#manually set the underscore version of this prop in the manifest
#predix.timeseries2.oauth.clientId=${predix_timeseries2_oauth_clientId}
#then, in the manifest bind to the 2nd time series and 2nd uaa and set the name of it in the properties named "predix_timeseries2_name" and "predix_timeseries2_uaa_name"


java.docs.url=${JAVA_DOCS_URL}
